[{"/Users/home/Desktop/React-market/src/index.js":"1","/Users/home/Desktop/React-market/src/Cart.js":"2","/Users/home/Desktop/React-market/src/Navbar.js":"3","/Users/home/Desktop/React-market/src/Product.js":"4","/Users/home/Desktop/React-market/src/App.js":"5","/Users/home/Desktop/React-market/src/Products.js":"6","/Users/home/Desktop/React-market/src/ProductDetailNutrition.js":"7"},{"size":506,"mtime":1607097577000,"results":"8","hashOfConfig":"9"},{"size":3691,"mtime":1608710636000,"results":"10","hashOfConfig":"9"},{"size":973,"mtime":1607687711000,"results":"11","hashOfConfig":"9"},{"size":1423,"mtime":1608206136000,"results":"12","hashOfConfig":"9"},{"size":2313,"mtime":1608615980000,"results":"13","hashOfConfig":"9"},{"size":1064,"mtime":1608457166000,"results":"14","hashOfConfig":"9"},{"size":673,"mtime":1607691332000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16rh2bd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/home/Desktop/React-market/src/index.js",[],"/Users/home/Desktop/React-market/src/Cart.js",[],"/Users/home/Desktop/React-market/src/Navbar.js",[],"/Users/home/Desktop/React-market/src/Product.js",[],"/Users/home/Desktop/React-market/src/App.js",["33"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./Navbar.js\";\nimport Home from \"./Home.js\";\nimport About from \"./About.js\";\nimport Products from \"./Products.js\";\nimport ProductDetails from \"./ProductDetails.js\";\nimport Cart from \"./Cart.js\";\n\nfunction App() {\n  const [cart, setCart] = useState(function () {\n    const savedString = localStorage.getItem(\"cart\");\n    let savedCart = [];\n    try {\n      savedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    } catch (error) {\n      savedCart = [];\n    }\n    return savedCart;\n  });\n\n  useEffect(() => {\n    if (cart) {\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  }, [cart]);\n\n  function handleProductDelete(id) {\n    const updatedCart = cart.filter((product) => product.id !== id);\n    setCart(updatedCart);\n  }\n\n  function handleProductAdd(newProduct) {\n    // check if item exists\n    const existingProduct = cart.find(\n      (product) => product.id === newProduct.id\n    );\n    if (existingProduct) {\n      // increase quantity\n      const updatedCart = cart.map((product) => {\n        if (product.id === newProduct.id) {\n          return {\n            ...product,\n            quantity: product.quantity + 1,\n          };\n        }\n        return product;\n      });\n      setCart(updatedCart);\n    } else {\n      // product is new to the cart\n      setCart([\n        ...cart,\n        {\n          ...newProduct,\n          quantity: 1,\n        },\n      ]);\n    }\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar cart={cart} />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/products\">\n            <Products\n              cart={cart}\n              onProductAdd={handleProductAdd}\n              onProductDelete={handleProductDelete}\n            />\n          </Route>\n          <Route path=\"/products/:id\">\n            <ProductDetails onProductAdd={handleProductAdd} />\n          </Route>\n          <Route exact path=\"/cart\">\n            <Cart cart={cart} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/home/Desktop/React-market/src/Products.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport Product from \"./Product.js\";\nimport useFetch from \"./useFetch.js\";\nimport Loader from \"./Loader.js\";\n\nexport default function Products(props) {\n  const [products, setProducts] = useState([]);\n  const { get, loading } = useFetch(\n    \"https://react-tutorial-demo.firebaseio.com/\"\n  );\n\n  useEffect(() => {\n    get(\"supermarket.json\")\n      .then((data) => {\n        setProducts(data);\n      })\n      .catch((error) => console.log(\"Could not load products\", error));\n  }, []);\n\n  return (\n    <div className=\"products-layout\">\n      <h1>Products</h1>\n      <p>Take a look at our products</p>\n      <div className=\"products-grid\">\n        {loading && <Loader />}\n        {products.map((product) => {\n          return (\n            <Product\n              key={product.id}\n              details={product}\n              cart={props.cart}\n              onProductAdd={props.onProductAdd}\n              onProductDelete={props.onProductDelete}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n",["35","36"],"/Users/home/Desktop/React-market/src/ProductDetailNutrition.js",[],{"ruleId":"37","severity":1,"message":"38","line":12,"column":11,"nodeType":"39","messageId":"40","endLine":12,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":18,"column":6,"nodeType":"43","endLine":18,"endColumn":8,"suggestions":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},"no-unused-vars","'savedString' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-native-reassign",["50"],"no-negated-in-lhs",["51"],{"desc":"52","fix":"53"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [get]",{"range":"54","text":"55"},[529,531],"[get]"]